---
title: "Encuentra tu tienda, bar, restaurante o café favorito"
page-layout: full
format:
  html:
    toc: false
    
---

<link href="https://fonts.googleapis.com/css2?family=Savate&display=swap" rel="stylesheet">

<style>
  body {
    font-family: 'Savate', sans-serif;
  }
  .cta-button {
    background-color: #800000;
    color: white;
    padding: 15px 30px;
    border-radius: 8px;
    text-decoration: none;
    font-size: 18px;
    display: inline-block;
    margin: 1em 0;
    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.1);
  }
  .centered {
    text-align: center;
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .features {
    max-width: 600px;
    margin: 0 auto;
    font-size: 1.1em;
  }
  .features li {
    margin-bottom: 0.8em;
  }
  blockquote {
    font-style: italic;
    color: #555;
    margin: 2em auto;
    max-width: 600px;
  }
  .hero-search {
    text-align: center;
    margin-top: 2em;
  }
  .hero-search input[type="text"] {
    padding: 12px;
    font-size: 18px;
    width: 100%;
    max-width: 500px;
    border-radius: 6px;
    border: 1px solid #ccc;
  }
  .popular-cities {
    text-align: center;
    margin: 3em 0;
  }
  .popular-cities a {
    margin: 0 10px;
    display: inline-block;
    color: #800000;
    text-decoration: none;
    font-size: 1.1em;
  }


  /* --- 2 cols on first row, 3 on second --- */
  .popular-cities-grid{
    display:grid;
    grid-template-columns: repeat(6, 1fr);
    gap: 1rem;
    max-width: 1000px;
    margin: 2rem auto;
  }
  .popular-cities-grid .city-card:nth-child(-n+2){  /* first two */
    grid-column: span 3;
  }
  .popular-cities-grid .city-card:nth-child(n+3){   /* rest */
    grid-column: span 2;
  }

/* mobile fallback: 1 per row */
  @media (max-width: 640px){
    .popular-cities-grid{ grid-template-columns: 1fr; }
    .popular-cities-grid .city-card{ grid-column: auto; }
  }


.city-card:hover {
  transform: scale(1.02);
}

.city-card img {
  width: 100%;
  height: 120px;   /* antes 200px */
  object-fit: cover;
}

.city-name {
  padding: 1em;
  text-align: center;
  font-weight: bold;
  font-size: 1.2em;
  color: #800000;
  background-color: rgba(255, 255, 255, 0.3); /* semi-transparent white */
}


.suggestion-list {
  list-style: none;
  padding: 0;
  margin: 0;
  border: 1px solid #ccc;
  border-top: none;
  max-height: 150px;
  overflow-y: auto;
  position: absolute;
  width: 80%;
  max-width: 500px;
  left: 50%;
  transform: translateX(-50%);
  background: white;
  z-index: 10;
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.suggestion-list li {
  padding: 10px;
  cursor: pointer;
  border-top: 1px solid #eee;
  font-size: 16px;
  transition: background 0.2s ease;
}

.suggestion-list li:hover {
  background-color: #f0f0f0;
}


.origin-note{
  margin-top:.5rem;
  color:#555;
  font-size:.95rem;
}

</style>





Explora nuestro directorio de establecimientos por ciudad, tipo de establecimiento, país de origen de los productos y más. Todo en un solo lugar. 
Actualmente hay sitios argentinos, pero próximamente añadiremos sitios especilizados en productos de otros países latinoamericanos. 


<div class="hero-search" style="position: relative;">
  <input type="text" id="citySearch" placeholder="Buscar establecimientos en mi ciudad" autocomplete="off" />
  <ul id="citySuggestions" class="suggestion-list"></ul>
</div>

<div class="hero-filters" style="text-align:center; margin-top:1rem;">
  <select id="originSelect" style="padding:10px; font-size:16px; border-radius:6px; border:1px solid #ccc; width:100%; max-width:500px;">
    <option value="">Todos los países</option>
  </select>
  <div class="origin-note">Proximamente añadiremos más países</div>
</div>



<div class="centered">
  <a href="map.html" class="cta-button">Explora todas las ciudades</a>
</div>

### Ciudades más populares

```{=html}
<div class="popular-cities-grid">
  <div class="city-card" onclick="window.location.href='map.html?city=Barcelona'">
    <img src="images/cities/barcelona.jpg" alt="Barcelona">
    <div class="city-name">Barcelona</div>
  </div>
  <div class="city-card" onclick="window.location.href='map.html?city=Madrid'">
    <img src="images/cities/madrid.jpg" alt="Madrid">
    <div class="city-name">Madrid</div>
  </div>
  <div class="city-card" onclick="window.location.href='map.html?city=Valencia'">
    <img src="images/cities/valencia.jpg" alt="Valencia">
    <div class="city-name">Valencia</div>
  </div>
  <div class="city-card" onclick="window.location.href='map.html?city=París'">
    <img src="images/cities/París2.jpg" alt="París">
    <div class="city-name">París</div>
  </div>
  <div class="city-card" onclick="window.location.href='map.html?city=Londres'">
    <img src="images/cities/Londres.jpg" alt="Londres">
    <div class="city-name">Londres</div>
  </div>
</div>
```


## ¿Qué puedes hacer?

<ul class="features">
  <li>Filtrar por ciudad, tipo de establecimiento o país de origen de los productos</li>
  <li>Ver establecimientos cercanos a tu ubicación</li>
</ul>

## Colabora

¿Conoces un establecimiento que debería estar aquí, o simplemente quieres ponerte en contacto con nosotros?

<div class="centered">
  <a href="/contacto.html" class="cta-button">Ponte en contacto con nosotros</a>
</div>


<script>
let centers = [];

const input = document.getElementById("citySearch");
const suggestions = document.getElementById("citySuggestions");


const originSelect = document.getElementById("originSelect");

// Lista fija (edítala a tu gusto)
const FIXED_COUNTRIES = ["Argentina"];

// Pinta opciones inmediatamente (sin esperar al fetch)
originSelect.innerHTML = '<option value="">Todos los países</option>' +
  FIXED_COUNTRIES.map(p => `<option value="${p}">${p}</option>`).join('');

// Preselecciona si vienes con ?origin=
const currentOrigin = new URLSearchParams(window.location.search).get('origin') || '';
if (currentOrigin) originSelect.value = currentOrigin;

// Navegación al cambiar
originSelect.addEventListener("change", () => {
  const v = originSelect.value;
  const q = new URLSearchParams();
  if (input.value.trim()) q.set("city", input.value.trim());
  if (v) q.set("origin", v);
  window.location.href = `/map.html?${q.toString()}`;
});


const parseOrigins = v =>
  Array.isArray(v) ? v :
  (typeof v === "string" ? v.split(/[;,/|]+/) : []);

const titleCase = s => (s || "").toLowerCase().replace(/\b\w/g, m => m.toUpperCase());


fetch(encodeURI("data/centers_with_google_maps_and_website_information.json"))
  .then(res => {
    if (!res.ok) throw new Error("No se pudieron cargar los datos");
    return res.json();
  })
  .then(data => {
    centers = data;
  })
  .catch(err => {
    console.error("Error cargando establecimientos:", err);
  });


input.addEventListener("input", () => {
  const val = input.value.toLowerCase().trim();
  suggestions.innerHTML = "";

  if (val.length === 0) {
    suggestions.style.display = "none";
    return;
  }

  const allCities = [...new Set(centers.map(c => c.city))];
  const matches = allCities.filter(c => c.toLowerCase().startsWith(val));

  matches.forEach(city => {
    const li = document.createElement("li");
    li.textContent = city;
    li.addEventListener("click", () => {
      window.location.href = `map.html?city=${encodeURIComponent(city)}`;
    });
    suggestions.appendChild(li);
  });

  suggestions.style.display = matches.length > 0 ? "block" : "none";
});

input.addEventListener("keydown", (e) => {
  if (e.key === "Enter") {
    const val = input.value.trim();
    if (val.length > 0) {
      window.location.href = `map.html?city=${encodeURIComponent(val)}`;
    }
  }
});

document.addEventListener("click", (e) => {
  if (!input.contains(e.target) && !suggestions.contains(e.target)) {
    suggestions.style.display = "none";
  }
});
</script>